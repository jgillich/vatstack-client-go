/*
Vatstack API Specification

A suite of VAT APIs which let you validate VAT numbers with government services, look up VAT rates by ISO country code, calculate price quotes with centralized VAT rules and store transactions with each sale for VAT reporting.

API version: 1.3.0
Contact: team@vatstack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vatstack

import (
	"encoding/json"
)

// checks if the GetAllBatches200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllBatches200Response{}

// GetAllBatches200Response struct for GetAllBatches200Response
type GetAllBatches200Response struct {
	// True if this list has another page of items after this one that can be fetched.
	HasMore bool `json:"has_more"`
	BatchesCount int32 `json:"batches_count"`
	Batches []Batch `json:"batches"`
}

// NewGetAllBatches200Response instantiates a new GetAllBatches200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllBatches200Response(hasMore bool, batchesCount int32, batches []Batch) *GetAllBatches200Response {
	this := GetAllBatches200Response{}
	this.HasMore = hasMore
	this.BatchesCount = batchesCount
	this.Batches = batches
	return &this
}

// NewGetAllBatches200ResponseWithDefaults instantiates a new GetAllBatches200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllBatches200ResponseWithDefaults() *GetAllBatches200Response {
	this := GetAllBatches200Response{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *GetAllBatches200Response) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *GetAllBatches200Response) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *GetAllBatches200Response) SetHasMore(v bool) {
	o.HasMore = v
}

// GetBatchesCount returns the BatchesCount field value
func (o *GetAllBatches200Response) GetBatchesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BatchesCount
}

// GetBatchesCountOk returns a tuple with the BatchesCount field value
// and a boolean to check if the value has been set.
func (o *GetAllBatches200Response) GetBatchesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchesCount, true
}

// SetBatchesCount sets field value
func (o *GetAllBatches200Response) SetBatchesCount(v int32) {
	o.BatchesCount = v
}

// GetBatches returns the Batches field value
func (o *GetAllBatches200Response) GetBatches() []Batch {
	if o == nil {
		var ret []Batch
		return ret
	}

	return o.Batches
}

// GetBatchesOk returns a tuple with the Batches field value
// and a boolean to check if the value has been set.
func (o *GetAllBatches200Response) GetBatchesOk() ([]Batch, bool) {
	if o == nil {
		return nil, false
	}
	return o.Batches, true
}

// SetBatches sets field value
func (o *GetAllBatches200Response) SetBatches(v []Batch) {
	o.Batches = v
}

func (o GetAllBatches200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllBatches200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["has_more"] = o.HasMore
	toSerialize["batches_count"] = o.BatchesCount
	toSerialize["batches"] = o.Batches
	return toSerialize, nil
}

type NullableGetAllBatches200Response struct {
	value *GetAllBatches200Response
	isSet bool
}

func (v NullableGetAllBatches200Response) Get() *GetAllBatches200Response {
	return v.value
}

func (v *NullableGetAllBatches200Response) Set(val *GetAllBatches200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllBatches200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllBatches200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllBatches200Response(val *GetAllBatches200Response) *NullableGetAllBatches200Response {
	return &NullableGetAllBatches200Response{value: val, isSet: true}
}

func (v NullableGetAllBatches200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllBatches200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


