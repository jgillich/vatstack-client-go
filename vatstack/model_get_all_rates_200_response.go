/*
Vatstack API Specification

A suite of VAT APIs which let you validate VAT numbers with government services, look up VAT rates by ISO country code, calculate price quotes with centralized VAT rules and store transactions with each sale for VAT reporting.

API version: 1.3.0
Contact: team@vatstack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vatstack

import (
	"encoding/json"
)

// checks if the GetAllRates200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllRates200Response{}

// GetAllRates200Response struct for GetAllRates200Response
type GetAllRates200Response struct {
	// True if this list has another page of items after this one that can be fetched.
	HasMore bool `json:"has_more"`
	RatesCount int32 `json:"rates_count"`
	Rates []Rate `json:"rates"`
}

// NewGetAllRates200Response instantiates a new GetAllRates200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllRates200Response(hasMore bool, ratesCount int32, rates []Rate) *GetAllRates200Response {
	this := GetAllRates200Response{}
	this.HasMore = hasMore
	this.RatesCount = ratesCount
	this.Rates = rates
	return &this
}

// NewGetAllRates200ResponseWithDefaults instantiates a new GetAllRates200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllRates200ResponseWithDefaults() *GetAllRates200Response {
	this := GetAllRates200Response{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *GetAllRates200Response) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *GetAllRates200Response) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *GetAllRates200Response) SetHasMore(v bool) {
	o.HasMore = v
}

// GetRatesCount returns the RatesCount field value
func (o *GetAllRates200Response) GetRatesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RatesCount
}

// GetRatesCountOk returns a tuple with the RatesCount field value
// and a boolean to check if the value has been set.
func (o *GetAllRates200Response) GetRatesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RatesCount, true
}

// SetRatesCount sets field value
func (o *GetAllRates200Response) SetRatesCount(v int32) {
	o.RatesCount = v
}

// GetRates returns the Rates field value
func (o *GetAllRates200Response) GetRates() []Rate {
	if o == nil {
		var ret []Rate
		return ret
	}

	return o.Rates
}

// GetRatesOk returns a tuple with the Rates field value
// and a boolean to check if the value has been set.
func (o *GetAllRates200Response) GetRatesOk() ([]Rate, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rates, true
}

// SetRates sets field value
func (o *GetAllRates200Response) SetRates(v []Rate) {
	o.Rates = v
}

func (o GetAllRates200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllRates200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["has_more"] = o.HasMore
	toSerialize["rates_count"] = o.RatesCount
	toSerialize["rates"] = o.Rates
	return toSerialize, nil
}

type NullableGetAllRates200Response struct {
	value *GetAllRates200Response
	isSet bool
}

func (v NullableGetAllRates200Response) Get() *GetAllRates200Response {
	return v.value
}

func (v *NullableGetAllRates200Response) Set(val *GetAllRates200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllRates200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllRates200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllRates200Response(val *GetAllRates200Response) *NullableGetAllRates200Response {
	return &NullableGetAllRates200Response{value: val, isSet: true}
}

func (v NullableGetAllRates200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllRates200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


