/*
Vatstack API Specification

A suite of VAT APIs which let you validate VAT numbers with government services, look up VAT rates by ISO country code, calculate price quotes with centralized VAT rules and store transactions with each sale for VAT reporting.

API version: 1.3.0
Contact: team@vatstack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vatstack

import (
	"encoding/json"
)

// checks if the GetAllEvidences200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllEvidences200Response{}

// GetAllEvidences200Response struct for GetAllEvidences200Response
type GetAllEvidences200Response struct {
	// True if this list has another page of items after this one that can be fetched.
	HasMore bool `json:"has_more"`
	EvidencesCount int32 `json:"evidences_count"`
	Evidences []Evidence `json:"evidences"`
}

// NewGetAllEvidences200Response instantiates a new GetAllEvidences200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllEvidences200Response(hasMore bool, evidencesCount int32, evidences []Evidence) *GetAllEvidences200Response {
	this := GetAllEvidences200Response{}
	this.HasMore = hasMore
	this.EvidencesCount = evidencesCount
	this.Evidences = evidences
	return &this
}

// NewGetAllEvidences200ResponseWithDefaults instantiates a new GetAllEvidences200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllEvidences200ResponseWithDefaults() *GetAllEvidences200Response {
	this := GetAllEvidences200Response{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *GetAllEvidences200Response) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *GetAllEvidences200Response) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *GetAllEvidences200Response) SetHasMore(v bool) {
	o.HasMore = v
}

// GetEvidencesCount returns the EvidencesCount field value
func (o *GetAllEvidences200Response) GetEvidencesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EvidencesCount
}

// GetEvidencesCountOk returns a tuple with the EvidencesCount field value
// and a boolean to check if the value has been set.
func (o *GetAllEvidences200Response) GetEvidencesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EvidencesCount, true
}

// SetEvidencesCount sets field value
func (o *GetAllEvidences200Response) SetEvidencesCount(v int32) {
	o.EvidencesCount = v
}

// GetEvidences returns the Evidences field value
func (o *GetAllEvidences200Response) GetEvidences() []Evidence {
	if o == nil {
		var ret []Evidence
		return ret
	}

	return o.Evidences
}

// GetEvidencesOk returns a tuple with the Evidences field value
// and a boolean to check if the value has been set.
func (o *GetAllEvidences200Response) GetEvidencesOk() ([]Evidence, bool) {
	if o == nil {
		return nil, false
	}
	return o.Evidences, true
}

// SetEvidences sets field value
func (o *GetAllEvidences200Response) SetEvidences(v []Evidence) {
	o.Evidences = v
}

func (o GetAllEvidences200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllEvidences200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["has_more"] = o.HasMore
	toSerialize["evidences_count"] = o.EvidencesCount
	toSerialize["evidences"] = o.Evidences
	return toSerialize, nil
}

type NullableGetAllEvidences200Response struct {
	value *GetAllEvidences200Response
	isSet bool
}

func (v NullableGetAllEvidences200Response) Get() *GetAllEvidences200Response {
	return v.value
}

func (v *NullableGetAllEvidences200Response) Set(val *GetAllEvidences200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllEvidences200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllEvidences200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllEvidences200Response(val *GetAllEvidences200Response) *NullableGetAllEvidences200Response {
	return &NullableGetAllEvidences200Response{value: val, isSet: true}
}

func (v NullableGetAllEvidences200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllEvidences200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


