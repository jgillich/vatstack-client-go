/*
Vatstack API Specification

A suite of VAT APIs which let you validate VAT numbers with government services, look up VAT rates by ISO country code, calculate price quotes with centralized VAT rules and store transactions with each sale for VAT reporting.

API version: 1.3.0
Contact: team@vatstack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vatstack

import (
	"encoding/json"
)

// checks if the GetAllValidations200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllValidations200Response{}

// GetAllValidations200Response struct for GetAllValidations200Response
type GetAllValidations200Response struct {
	// True if this list has another page of items after this one that can be fetched.
	HasMore bool `json:"has_more"`
	ValidationsCount int32 `json:"validations_count"`
	Validations []Validation `json:"validations"`
}

// NewGetAllValidations200Response instantiates a new GetAllValidations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllValidations200Response(hasMore bool, validationsCount int32, validations []Validation) *GetAllValidations200Response {
	this := GetAllValidations200Response{}
	this.HasMore = hasMore
	this.ValidationsCount = validationsCount
	this.Validations = validations
	return &this
}

// NewGetAllValidations200ResponseWithDefaults instantiates a new GetAllValidations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllValidations200ResponseWithDefaults() *GetAllValidations200Response {
	this := GetAllValidations200Response{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *GetAllValidations200Response) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *GetAllValidations200Response) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *GetAllValidations200Response) SetHasMore(v bool) {
	o.HasMore = v
}

// GetValidationsCount returns the ValidationsCount field value
func (o *GetAllValidations200Response) GetValidationsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidationsCount
}

// GetValidationsCountOk returns a tuple with the ValidationsCount field value
// and a boolean to check if the value has been set.
func (o *GetAllValidations200Response) GetValidationsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidationsCount, true
}

// SetValidationsCount sets field value
func (o *GetAllValidations200Response) SetValidationsCount(v int32) {
	o.ValidationsCount = v
}

// GetValidations returns the Validations field value
func (o *GetAllValidations200Response) GetValidations() []Validation {
	if o == nil {
		var ret []Validation
		return ret
	}

	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value
// and a boolean to check if the value has been set.
func (o *GetAllValidations200Response) GetValidationsOk() ([]Validation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Validations, true
}

// SetValidations sets field value
func (o *GetAllValidations200Response) SetValidations(v []Validation) {
	o.Validations = v
}

func (o GetAllValidations200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllValidations200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["has_more"] = o.HasMore
	toSerialize["validations_count"] = o.ValidationsCount
	toSerialize["validations"] = o.Validations
	return toSerialize, nil
}

type NullableGetAllValidations200Response struct {
	value *GetAllValidations200Response
	isSet bool
}

func (v NullableGetAllValidations200Response) Get() *GetAllValidations200Response {
	return v.value
}

func (v *NullableGetAllValidations200Response) Set(val *GetAllValidations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllValidations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllValidations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllValidations200Response(val *GetAllValidations200Response) *NullableGetAllValidations200Response {
	return &NullableGetAllValidations200Response{value: val, isSet: true}
}

func (v NullableGetAllValidations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllValidations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


